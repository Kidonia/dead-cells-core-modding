
cmake_minimum_required (VERSION 3.20)

project ("native")

SET(CMAKE_ASM_NASM_SOURCE_FILE_EXTENSIONS asm) 
ENABLE_LANGUAGE(ASM_NASM)
SET(CMAKE_ASM_NASM_FLAGS "-g") 

SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/../../bin/core/native/)

if(CMAKE_SIZEOF_VOID_P EQUAL 8)
set(X64 true)
set(ARCH_NAME x64)
else()
set(X86 true)
set(ARCH_NAME x86)
endif()

if(WIN32)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}win-${ARCH_NAME})
else()
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}linux-${ARCH_NAME})
endif()

foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
    string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG_UPPER)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG_UPPER} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG_UPPER} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG_UPPER} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
endforeach()

if(X86)
add_definitions(-DX86)
if(MSVC)
SET(CMAKE_ASM_NASM_FLAGS "${CMAKE_ASM_NASM_FLAGS} --prefix _") 
endif()
else()
add_definitions(-DX64)
endif()

if(MSVC)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_C_STANDARD 11)

add_definitions(-D_CRT_SECURE_NO_WARNINGS=1 -DUNICODE -D_UNICODE)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MD /Zi /Oy- /Gd")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MD /Zi /Oy- /Gd")

set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /DEBUG /OPT:ICF")
set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /DEBUG /OPT:ICF")
endif()


add_subdirectory ("3rd/hashlink")
add_subdirectory ("modcorenative")